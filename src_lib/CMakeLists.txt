#
#
# Static Library Target: linked against main and against tests.

vala_precompile(MY_PROJECT_C_SOURCES
	my_class.vala
PACKAGES
	gio-2.0
	gee-0.8
	posix
OPTIONS
	--target-glib=2.44
	--thread
	--debug
GENERATE_HEADER
	my-project-${MY_PROJECT_VERSION_API}
GENERATE_VAPI
	my-project-${MY_PROJECT_VERSION_API}
)

add_library(my-project-${MY_PROJECT_VERSION_API}
	${MY_PROJECT_C_SOURCES}
)

set_target_properties ("my-project-${MY_PROJECT_VERSION_API}" PROPERTIES
	SOVERSION "${MY_PROJECT_SOVERSION_CURRENT}.${MY_PROJECT_SOVERSION_REVISION}.${MY_PROJECT_SOVERSION_AGE}"
	VERSION   "${MY_PROJECT_SOVERSION_CURRENT}.${MY_PROJECT_SOVERSION_REVISION}")

install (TARGETS my-project-${MY_PROJECT_VERSION_API}
	RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
	LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
	ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR})
install(FILES ${CMAKE_BINARY_DIR}/src_lib/my-project-${MY_PROJECT_VERSION_API}.h
	DESTINATION ${CMAKE_INSTALL_FULL_INCLUDEDIR})

# Generate a .gitignore
file(WRITE  ".gitignore" "# Automatically generated by CMake, do not modify.\n")
foreach(file
    ".gitignore"
    "${CMAKE_SHARED_LIBRARY_PREFIX}my-project-${MY_PROJECT_VERSION_API}${CMAKE_SHARED_LIBRARY_SUFFIX}"
    "${CMAKE_STATIC_LIBRARY_PREFIX}my-project-${MY_PROJECT_VERSION_API}${CMAKE_STATIC_LIBRARY_SUFFIX}")
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
foreach(file ${MY_PROJECT_C_SOURCES})
  string(REPLACE "${CMAKE_CURRENT_BINARY_DIR}/" "" file ${file})
  file(APPEND ".gitignore" "/${file}\n")
endforeach(file)
